# Generated by Django 3.0.7 on 2020-06-20 02:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('account_balance', models.FloatField()),
                ('account_opendate', models.DateTimeField()),
                ('account_type', models.CharField(choices=[('saveaccount', 'saving account'), ('checkaccount', 'check account')], max_length=20)),
            ],
            options={
                'db_table': 'account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('branch_assets', models.FloatField()),
                ('branch_city', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'branch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('custom_id', models.CharField(max_length=18, primary_key=True, serialize=False)),
                ('custom_name', models.CharField(max_length=10)),
                ('custom_phone', models.CharField(max_length=11)),
                ('custom_address', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_name', models.CharField(max_length=10)),
                ('contact_phone', models.CharField(max_length=11)),
                ('contact_email', models.CharField(blank=True, max_length=30, null=True)),
                ('contact_custom_relation', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerHasAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_visit', models.DateTimeField()),
                ('acc_type', models.CharField(choices=[('saveaccount', 'saving account'), ('checkaccount', 'check account')], max_length=20)),
            ],
            options={
                'db_table': 'customer_has_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerHasLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'customer_has_loan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=20)),
                ('department_type', models.CharField(blank=True, max_length=20, null=True)),
                ('manager_id', models.CharField(max_length=18)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('loan_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('loan_money', models.FloatField()),
                ('loan_state', models.CharField(blank=True, choices=[('0', 'not start'), ('1', 'in progress'), ('2', 'finished')], max_length=1, null=True)),
            ],
            options={
                'db_table': 'loan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PayForLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_id', models.CharField(max_length=4)),
                ('pay_date', models.DateTimeField()),
                ('pay_account', models.FloatField()),
            ],
            options={
                'db_table': 'pay_for_loan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff_id', models.CharField(max_length=18, primary_key=True, serialize=False)),
                ('staff_name', models.CharField(max_length=10)),
                ('staff_phone', models.CharField(max_length=11)),
                ('staff_address', models.CharField(blank=True, max_length=100, null=True)),
                ('staff_starttime', models.DateField()),
                ('staff_ismanager', models.CharField(choices=[('0', 'is not manager'), ('1', 'is manager')], max_length=1)),
            ],
            options={
                'db_table': 'staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CheckingAccount',
            fields=[
                ('credit_line', models.FloatField()),
                ('account_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='bank.Account')),
            ],
            options={
                'db_table': 'checking_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SavingsAccount',
            fields=[
                ('interset_rate', models.FloatField()),
                ('currency_type', models.CharField(max_length=10)),
                ('account_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='bank.Account')),
            ],
            options={
                'db_table': 'savings_account',
                'managed': False,
            },
        ),
    ]
